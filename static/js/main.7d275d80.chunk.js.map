{"version":3,"sources":["components/drawer.js","Screen.js","components/simple-expansion-panel.js","screens/Home/index.js","components/device-orientation.component.js","screens/DeviceAngles/index.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","list","width","fullList","TemporaryDrawer","classes","React","useState","top","left","bottom","right","state","setState","toggleDrawer","side","open","event","type","key","history","useHistory","handleClick","push","Box","className","mt","AppBar","position","Toolbar","IconButton","edge","menuButton","color","aria-label","onClick","Typography","variant","title","Drawer","onClose","role","onKeyDown","List","map","text","index","ListItem","button","ListItemIcon","ListItemText","primary","Divider","theme","createMuiTheme","palette","Screen","children","ThemeProvider","CssBaseline","Grid","container","Container","root","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","SimpleExpansionPanel","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","id","ExpansionPanelDetails","Home","Button","component","Link","to","label","value","Component","DeviceOrientation","absolute","alpha","beta","gamma","isSupported","errMsg","handleOrientation","listenToDeviceOrientationEvents","console","log","window","addEventListener","DeviceOrientationEvent","this","requestPermission","then","response","catch","err","error","JSON","stringify","removeEventListener","props","defaultProps","DeviceAngles","val","Number","toFixed","formatAngleData","glide","spring","stiffness","damping","pageTransitions","atEnter","offset","atLeave","atActive","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","basename","runOnMount","pathname","mapStyles","styles","transform","path","exact","document","getElementById","URL","process","href","origin","fetch","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7d275d80.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { AppBar, Toolbar, IconButton, Typography, Box } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  }\n});\n\nexport function TemporaryDrawer() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n\n  const toggleDrawer = (side, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [side]: open });\n  };\n\n  const history = useHistory();\n\n  function handleClick() {\n    history.push('/device-angles');\n  }\n\n  const sideList = side => (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={toggleDrawer(side, false)}\n      onKeyDown={toggleDrawer(side, false)}\n    >\n      <List>\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n        <ListItem button key={'device-angles-btn'} onClick={handleClick}>\n          Device Angles\n        </ListItem>\n      </List>\n      <Divider />\n      <List>\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n\n  return (\n    <Box className={'drawer'} mt={2}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={toggleDrawer('left', true)}>\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            NHS Hack Rehab App\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer open={state.left} onClose={toggleDrawer('left', false)}>\n        {sideList('left')}\n      </Drawer>\n    </Box>\n  );\n}\n","import React from 'react';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { Container, Grid } from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { TemporaryDrawer } from './components/drawer';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n  },\n});\n\nconst className = 'base-screen';\n\nexport const Screen = ({ children }) => (\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <Grid container className={className}>\n      <Container>\n        <TemporaryDrawer />\n        {children}\n      </Container>\n    </Grid>\n  </ThemeProvider>\n);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\nexport default function SimpleExpansionPanel() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <ExpansionPanel>\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography className={classes.heading}>Expansion Panel 1</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Typography>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\n            sit amet blandit leo lobortis eget.\n          </Typography>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n      <ExpansionPanel>\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel2a-content\"\n          id=\"panel2a-header\"\n        >\n          <Typography className={classes.heading}>Expansion Panel 2</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Typography>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\n            sit amet blandit leo lobortis eget.\n          </Typography>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport { Box } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\n\nimport { Screen } from '../../Screen';\nimport SimpleExpansionPanel from '../../components/simple-expansion-panel';\n\nimport '../../App.scss';\nexport class Home extends Component {\n\n  render() {\n    return (\n      <Screen>\n        <Box mt={2}>\n          <SimpleExpansionPanel />\n        </Box>\n        <Box mt={2}>\n          <Button variant=\"contained\" color=\"primary\"\n            component={Link}\n            to=\"/device-angles\"\n            label=\"device-angles\"\n            value=\"device-angles\"\n          >\n            Device Angles\n          </Button>\n        </Box>\n      </Screen>\n    );\n  }\n}\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class DeviceOrientation extends Component {\n  static propTypes = {\n    children: PropTypes.func,\n  };\n\n  static defaultProps = {\n    children: () => null,\n  };\n\n  state = {\n    absolute: true,\n    alpha: 0,\n    beta: 0,\n    gamma: 0,\n    isSupported: '',\n    errMsg: 'none'\n  };\n\n  handleOrientation = event => {\n    const { absolute, alpha, beta, gamma } = event;\n\n    this.setState({ absolute, alpha, beta, gamma });\n  };\n\n  componentDidMount() {\n    if (window.DeviceOrientationEvent && 'ontouchstart' in window) {\n      // DeviceOrientationEvent supported\n      console.log('DeviceOrientationEvent supported');\n      this.setState({\n        isSupported: 'Yes'\n      });\n      if (typeof DeviceOrientationEvent.requestPermission === 'function') {\n        // iOS 13+\n        console.log('Requesting permission to use deviceorientation');\n        DeviceOrientationEvent.requestPermission()\n          .then(response => {\n            if (response === 'granted') {\n              this.listenToDeviceOrientationEvents();\n            }\n          })\n          .catch((err) => {\n            console.error(err);\n            this.setState({\n              errMsg: `iOS 13+: error requesting permission: ${JSON.stringify(err)}`\n            });\n          });\n      } else {\n        // non iOS 13+\n        this.listenToDeviceOrientationEvents();\n      }\n    } else {\n      // DeviceOrientationEvent NOT supported\n      console.log('DeviceOrientationEvent NOT supported');\n      this.setState({\n        isSupported: 'No'\n      });\n    }\n  }\n\n  listenToDeviceOrientationEvents = () => {\n    console.log('Adding event deviceorientation listener');\n    window.addEventListener('deviceorientation', this.handleOrientation, true);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\n      'deviceorientation',\n      this.handleOrientation,\n      true\n    );\n  }\n\n  render() {\n    return this.props.children(this.state);\n  }\n}","import React, { Component } from 'react';\nimport { Box } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\n\nimport { Screen } from '../../Screen';\nimport { DeviceOrientation } from '../../components/device-orientation.component';\nimport './DeviceAngles.scss';\n\nexport class DeviceAngles extends Component {\n\n  formatAngleData(val) {\n    return Number(val).toFixed(2);\n  }\n\n  render() {\n    return (\n      <Screen>\n        <Box>\n          <p>Device Angles</p>\n        </Box>\n        <Box mt={1}>\n          <DeviceOrientation>\n            {({ absolute, alpha, beta, gamma, errMsg, isSupported }) => (\n              <Box>\n                <Typography variant=\"h5\" component=\"h5\">\n                  {`Absolute: ${absolute}`}\n                </Typography>\n                <Typography variant=\"h3\" component=\"h3\">\n                  {`Alpha: ${this.formatAngleData(alpha)}`}\n                </Typography>\n                <Typography variant=\"h3\" component=\"h3\">\n                  {`Beta: ${this.formatAngleData(beta)}`}\n                </Typography>\n                <Typography variant=\"h3\" component=\"h3\">\n                  {`Gamma: ${this.formatAngleData(gamma)}`}\n                </Typography>\n                <Typography variant=\"h5\" component=\"h5\">\n                  {`isSupported: ${isSupported}`}\n                </Typography>\n                <Typography variant=\"h5\" component=\"h5\">\n                  {`Err: ${errMsg}`}\n                </Typography>\n              </Box>\n            )}\n          </DeviceOrientation>\n        </Box>\n      </Screen>\n    );\n  }\n}\n","  \nimport React from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\n\nimport { Home } from './screens/Home';\nimport { DeviceAngles } from './screens/DeviceAngles';\n\nimport { AnimatedSwitch, spring } from 'react-router-transition';\n\nfunction glide(val) {\n  return spring(val, {\n    stiffness: 174,\n    damping: 24,\n  });\n}\n\n// function slide(val) {\n//   return spring(val, {\n//     stiffness: 125,\n//     damping: 16,\n//   });\n// }\n\nconst pageTransitions = {\n  atEnter: {\n    offset: 100,\n  },\n  atLeave: {\n    offset: glide(-100),\n  },\n  atActive: {\n    offset: glide(0),\n  },\n};\n\nexport default () => (\n  <Router basename={null}>\n    <Route render={({ location }) => (\n      <div>\n        <AnimatedSwitch\n          {...pageTransitions}\n          runOnMount={location.pathname === '/'}\n          mapStyles={styles => ({\n            transform: `translateX(${styles.offset}%)`,\n          })}\n        >\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/device-angles\" component={DeviceAngles} />\n        </AnimatedSwitch>\n      </div>\n    )} />\n  </Router>\n)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport 'typeface-roboto';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}